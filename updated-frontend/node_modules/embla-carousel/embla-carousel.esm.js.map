{"version":3,"file":"embla-carousel.esm.js","sources":["src/components/utils.ts","src/components/Alignment.ts","src/components/Animation.ts","src/components/Axis.ts","src/components/Limit.ts","src/components/Counter.ts","src/components/Direction.ts","src/components/EventStore.ts","src/components/Vector1d.ts","src/components/DragHandler.ts","src/components/DragTracker.ts","src/components/PercentOfView.ts","src/components/ScrollBody.ts","src/components/ScrollBounds.ts","src/components/ScrollContain.ts","src/components/ScrollLimit.ts","src/components/ScrollLooper.ts","src/components/ScrollProgress.ts","src/components/ScrollSnaps.ts","src/components/ScrollTarget.ts","src/components/ScrollTo.ts","src/components/Translate.ts","src/components/SlideLooper.ts","src/components/SlidesInView.ts","src/components/SlideSizes.ts","src/components/SlidesToScroll.ts","src/components/Engine.ts","src/components/EventHandler.ts","src/components/Options.ts","src/components/OptionsHandler.ts","src/components/PluginsHandler.ts","src/components/index.ts"],"sourcesContent":["export function map(\n  value: number,\n  iStart: number,\n  iStop: number,\n  oStart: number,\n  oStop: number,\n): number {\n  return oStart + (oStop - oStart) * ((value - iStart) / (iStop - iStart))\n}\n\nexport function isNumber(subject: unknown): subject is number {\n  return typeof subject === 'number'\n}\n\nexport function isString(subject: unknown): subject is string {\n  return typeof subject === 'string'\n}\n\nexport function isObject(subject: unknown): subject is Record<string, unknown> {\n  return Object.prototype.toString.call(subject) === '[object Object]'\n}\n\nexport function isArray(subject: unknown): subject is Record<number, unknown> {\n  return Array.isArray(subject)\n}\n\nexport function isRecord(\n  subject: unknown,\n): subject is Record<string | number, unknown> {\n  return isObject(subject) || isArray(subject)\n}\n\nexport function mathAbs(n: number): number {\n  return Math.abs(n)\n}\n\nexport function mathSign(n: number): number {\n  return !n ? 0 : n / mathAbs(n)\n}\n\nexport function deltaAbs(valueB: number, valueA: number): number {\n  return mathAbs(valueB - valueA)\n}\n\nexport function factorAbs(valueB: number, valueA: number): number {\n  if (valueB === 0 || valueA === 0) return 0\n  if (mathAbs(valueB) <= mathAbs(valueA)) return 0\n  const diff = deltaAbs(mathAbs(valueB), mathAbs(valueA))\n  return mathAbs(diff / valueB)\n}\n\nexport function roundToDecimals(decimalPoints: number): (n: number) => number {\n  const pow = Math.pow(10, decimalPoints)\n  return (n: number): number => Math.round(n * pow) / pow\n}\n\nexport function arrayKeys<Type>(array: Type[]): number[] {\n  return objectKeys(array).map(Number)\n}\n\nexport function arrayLast<Type>(array: Type[]): Type {\n  return array[arrayLastIndex(array)]\n}\n\nexport function arrayLastIndex<Type>(array: Type[]): number {\n  return Math.max(0, array.length - 1)\n}\n\nexport function objectKeys<Type extends object>(object: Type): string[] {\n  return Object.keys(object)\n}\n\nexport function objectsMergeDeep(\n  objectA: Record<string, unknown>,\n  objectB: Record<string, unknown>,\n): Record<string, unknown> {\n  return [objectA, objectB].reduce((mergedObjects, currentObject) => {\n    objectKeys(currentObject).forEach((key) => {\n      const valueA = mergedObjects[key]\n      const valueB = currentObject[key]\n      const areObjects = isObject(valueA) && isObject(valueB)\n\n      mergedObjects[key] = areObjects\n        ? objectsMergeDeep(valueA, valueB)\n        : valueB\n    })\n    return mergedObjects\n  }, {})\n}\n\nexport function objectsAreEqual(\n  objectA: Record<string, unknown>,\n  objectB: Record<string, unknown>,\n): boolean {\n  const objectAKeys = objectKeys(objectA)\n  const objectBKeys = objectKeys(objectB)\n\n  if (objectAKeys.length !== objectBKeys.length) return false\n\n  return objectAKeys.every((key) => {\n    const valueA = objectA[key]\n    const valueB = objectB[key]\n    if (typeof valueA === 'function') return `${valueA}` === `${valueB}`\n    if (!isRecord(valueA) || !isRecord(valueB)) return valueA === valueB\n    return objectsAreEqual(valueA, valueB)\n  })\n}\n","import { isNumber } from './utils'\n\nexport type AlignmentOptionType = 'start' | 'center' | 'end' | number\n\nexport type AlignmentType = {\n  measure: (n: number) => number\n}\n\nexport function Alignment(\n  align: AlignmentOptionType,\n  viewSize: number,\n): AlignmentType {\n  const predefined = { start, center, end }\n\n  function start(): number {\n    return 0\n  }\n\n  function center(n: number): number {\n    return end(n) / 2\n  }\n\n  function end(n: number): number {\n    return viewSize - n\n  }\n\n  function percent(): number {\n    return viewSize * Number(align)\n  }\n\n  function measure(n: number): number {\n    if (isNumber(align)) return percent()\n    return predefined[align](n)\n  }\n\n  const self: AlignmentType = {\n    measure,\n  }\n  return self\n}\n","type CallbackType = () => void\n\nexport type AnimationType = {\n  start: () => void\n  stop: () => void\n  proceed: () => void\n}\n\nexport function Animation(callback: FrameRequestCallback): AnimationType {\n  let animationFrame = 0\n\n  function ifAnimating(active: boolean, cb: CallbackType): CallbackType {\n    return (): void => {\n      if (active === !!animationFrame) cb()\n    }\n  }\n\n  function start(): void {\n    animationFrame = window.requestAnimationFrame(callback)\n  }\n\n  function stop(): void {\n    window.cancelAnimationFrame(animationFrame)\n    animationFrame = 0\n  }\n\n  const self: AnimationType = {\n    proceed: ifAnimating(true, start),\n    start: ifAnimating(false, start),\n    stop: ifAnimating(true, stop),\n  }\n  return self\n}\n","import { DirectionOptionType } from './Direction'\n\nexport type AxisOptionType = 'x' | 'y'\ntype AxisEdgeType = 'top' | 'right' | 'bottom' | 'left'\n\nexport type AxisType = {\n  scroll: AxisOptionType\n  cross: AxisOptionType\n  startEdge: AxisEdgeType\n  endEdge: AxisEdgeType\n  measureSize: (rect: DOMRect) => number\n}\n\nexport function Axis(\n  axis: AxisOptionType,\n  direction: DirectionOptionType,\n): AxisType {\n  const scroll = axis === 'y' ? 'y' : 'x'\n  const cross = axis === 'y' ? 'x' : 'y'\n  const startEdge = getStartEdge()\n  const endEdge = getEndEdge()\n\n  function measureSize(rect: DOMRect): number {\n    const { width, height } = rect\n    return scroll === 'x' ? width : height\n  }\n\n  function getStartEdge(): AxisEdgeType {\n    if (scroll === 'y') return 'top'\n    return direction === 'rtl' ? 'right' : 'left'\n  }\n\n  function getEndEdge(): AxisEdgeType {\n    if (scroll === 'y') return 'bottom'\n    return direction === 'rtl' ? 'left' : 'right'\n  }\n\n  const self: AxisType = {\n    scroll,\n    cross,\n    startEdge,\n    endEdge,\n    measureSize,\n  }\n  return self\n}\n","import { mathAbs } from './utils'\n\nexport type LimitType = {\n  min: number\n  max: number\n  length: number\n  constrain: (n: number) => number\n  reachedAny: (n: number) => boolean\n  reachedMax: (n: number) => boolean\n  reachedMin: (n: number) => boolean\n  removeOffset: (n: number) => number\n}\n\nexport function Limit(min: number, max: number): LimitType {\n  const length = mathAbs(min - max)\n\n  function reachedMin(n: number): boolean {\n    return n < min\n  }\n\n  function reachedMax(n: number): boolean {\n    return n > max\n  }\n\n  function reachedAny(n: number): boolean {\n    return reachedMin(n) || reachedMax(n)\n  }\n\n  function constrain(n: number): number {\n    if (!reachedAny(n)) return n\n    return reachedMin(n) ? min : max\n  }\n\n  function removeOffset(n: number): number {\n    if (!length) return n\n    return n - length * Math.ceil((n - max) / length)\n  }\n\n  const self: LimitType = {\n    length,\n    max,\n    min,\n    constrain,\n    reachedAny,\n    reachedMax,\n    reachedMin,\n    removeOffset,\n  }\n  return self\n}\n","import { Limit } from './Limit'\nimport { mathAbs } from './utils'\n\nexport type CounterType = {\n  get: () => number\n  set: (n: number) => CounterType\n  add: (n: number) => CounterType\n  clone: () => CounterType\n  min: number\n  max: number\n}\n\nexport function Counter(\n  max: number,\n  start: number,\n  loop: boolean,\n): CounterType {\n  const { min, constrain } = Limit(0, max)\n  const loopEnd = max + 1\n  let counter = withinLimit(start)\n\n  function withinLimit(n: number): number {\n    return !loop ? constrain(n) : mathAbs((loopEnd + n) % loopEnd)\n  }\n\n  function get(): number {\n    return counter\n  }\n\n  function set(n: number): CounterType {\n    counter = withinLimit(n)\n    return self\n  }\n\n  function add(n: number): CounterType {\n    return set(get() + n)\n  }\n\n  function clone(): CounterType {\n    return Counter(max, get(), loop)\n  }\n\n  const self: CounterType = {\n    add,\n    clone,\n    get,\n    set,\n    min,\n    max,\n  }\n  return self\n}\n","export type DirectionOptionType = 'ltr' | 'rtl'\n\nexport type DirectionType = {\n  apply: (n: number) => number\n}\n\nexport function Direction(direction: DirectionOptionType): DirectionType {\n  const sign = direction === 'rtl' ? -1 : 1\n\n  function apply(n: number): number {\n    return n * sign\n  }\n\n  const self: DirectionType = {\n    apply,\n  }\n  return self\n}\n","type EventNameType = keyof DocumentEventMap | keyof WindowEventMap\ntype EventHandlerType = (evt: any) => void\ntype EventOptionsType = boolean | AddEventListenerOptions | undefined\ntype EventRemoverType = () => void\n\nexport type EventStoreType = {\n  add: (\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options?: EventOptionsType,\n  ) => EventStoreType\n  removeAll: () => EventStoreType\n}\n\nexport function EventStore(): EventStoreType {\n  let listeners: EventRemoverType[] = []\n\n  function add(\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options: EventOptionsType = { passive: true },\n  ): EventStoreType {\n    node.addEventListener(type, handler, options)\n    listeners.push(() => node.removeEventListener(type, handler, options))\n    return self\n  }\n\n  function removeAll(): EventStoreType {\n    listeners = listeners.filter((remove) => remove())\n    return self\n  }\n\n  const self: EventStoreType = {\n    add,\n    removeAll,\n  }\n  return self\n}\n","import { isNumber } from './utils'\n\nexport type Vector1DType = {\n  get: () => number\n  set: (v: Vector1DType | number) => Vector1DType\n  add: (v: Vector1DType | number) => Vector1DType\n  subtract: (v: Vector1DType | number) => Vector1DType\n  multiply: (n: number) => Vector1DType\n  divide: (n: number) => Vector1DType\n  normalize: () => Vector1DType\n}\n\nexport function Vector1D(value: number): Vector1DType {\n  let vector = value\n\n  function get(): number {\n    return vector\n  }\n\n  function set(n: Vector1DType | number): Vector1DType {\n    vector = readNumber(n)\n    return self\n  }\n\n  function add(n: Vector1DType | number): Vector1DType {\n    vector += readNumber(n)\n    return self\n  }\n\n  function subtract(n: Vector1DType | number): Vector1DType {\n    vector -= readNumber(n)\n    return self\n  }\n\n  function multiply(n: number): Vector1DType {\n    vector *= n\n    return self\n  }\n\n  function divide(n: number): Vector1DType {\n    vector /= n\n    return self\n  }\n\n  function normalize(): Vector1DType {\n    if (vector !== 0) divide(vector)\n    return self\n  }\n\n  function readNumber(n: Vector1DType | number): number {\n    return isNumber(n) ? n : n.get()\n  }\n\n  const self: Vector1DType = {\n    add,\n    divide,\n    get,\n    multiply,\n    normalize,\n    set,\n    subtract,\n  }\n  return self\n}\n","import { AnimationType } from './Animation'\nimport { CounterType } from './Counter'\nimport { DirectionType } from './Direction'\nimport { DragTrackerType, PointerEventType } from './DragTracker'\nimport { EventHandlerType } from './EventHandler'\nimport { AxisType } from './Axis'\nimport { EventStore } from './EventStore'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollTargetType } from './ScrollTarget'\nimport { ScrollToType } from './ScrollTo'\nimport { Vector1D, Vector1DType } from './Vector1d'\nimport { deltaAbs, factorAbs, mathAbs, mathSign } from './utils'\nimport { PercentOfViewType } from './PercentOfView'\n\nexport type DragHandlerType = {\n  addActivationEvents: () => void\n  clickAllowed: () => boolean\n  pointerDown: () => boolean\n  removeAllEvents: () => void\n}\n\nexport function DragHandler(\n  axis: AxisType,\n  direction: DirectionType,\n  rootNode: HTMLElement,\n  target: Vector1DType,\n  dragTracker: DragTrackerType,\n  location: Vector1DType,\n  animation: AnimationType,\n  scrollTo: ScrollToType,\n  scrollBody: ScrollBodyType,\n  scrollTarget: ScrollTargetType,\n  index: CounterType,\n  eventHandler: EventHandlerType,\n  percentOfView: PercentOfViewType,\n  loop: boolean,\n  dragFree: boolean,\n  skipSnaps: boolean,\n): DragHandlerType {\n  const { cross: crossAxis } = axis\n  const focusNodes = ['INPUT', 'SELECT', 'TEXTAREA']\n  const nonPassiveEvent = { passive: false }\n  const dragStartPoint = Vector1D(0)\n  const activationEvents = EventStore()\n  const interactionEvents = EventStore()\n  const dragThreshold = percentOfView.measure(20)\n  const snapForceBoost = { mouse: 300, touch: 400 }\n  const freeForceBoost = { mouse: 500, touch: 600 }\n  const baseSpeed = dragFree ? 5 : 16\n  const baseMass = 1\n\n  let startScroll = 0\n  let startCross = 0\n  let pointerIsDown = false\n  let preventScroll = false\n  let preventClick = false\n  let isMouse = false\n\n  function addActivationEvents(): void {\n    const node = rootNode\n    activationEvents\n      .add(node, 'dragstart', (evt) => evt.preventDefault(), nonPassiveEvent)\n      .add(node, 'touchmove', () => undefined, nonPassiveEvent)\n      .add(node, 'touchend', () => undefined)\n      .add(node, 'touchstart', down)\n      .add(node, 'mousedown', down)\n      .add(node, 'touchcancel', up)\n      .add(node, 'contextmenu', up)\n      .add(node, 'click', click, true)\n  }\n\n  function addInteractionEvents(): void {\n    const node = isMouse ? document : rootNode\n    interactionEvents\n      .add(node, 'touchmove', move, nonPassiveEvent)\n      .add(node, 'touchend', up)\n      .add(node, 'mousemove', move, nonPassiveEvent)\n      .add(node, 'mouseup', up)\n  }\n\n  function removeAllEvents(): void {\n    activationEvents.removeAll()\n    interactionEvents.removeAll()\n  }\n\n  function isFocusNode(node: Element): boolean {\n    const name = node.nodeName || ''\n    return focusNodes.indexOf(name) > -1\n  }\n\n  function forceBoost(): number {\n    const boost = dragFree ? freeForceBoost : snapForceBoost\n    const type = isMouse ? 'mouse' : 'touch'\n    return boost[type]\n  }\n\n  function allowedForce(force: number, targetChanged: boolean): number {\n    const next = index.clone().add(mathSign(force) * -1)\n    const isEdge = next.get() === index.min || next.get() === index.max\n    const baseForce = scrollTarget.byDistance(force, !dragFree).distance\n\n    if (dragFree || mathAbs(force) < dragThreshold) return baseForce\n    if (!loop && isEdge) return baseForce * 0.4\n    if (skipSnaps && targetChanged) return baseForce * 0.5\n\n    return scrollTarget.byIndex(next.get(), 0).distance\n  }\n\n  function down(evt: PointerEventType): void {\n    isMouse = !dragTracker.isTouchEvent(evt)\n    if (isMouse && (evt as MouseEvent).button !== 0) return\n    if (isFocusNode(evt.target as Element)) return\n\n    const isMoving = deltaAbs(target.get(), location.get()) >= 2\n    const clearPreventClick = isMouse || !isMoving\n\n    pointerIsDown = true\n    dragTracker.pointerDown(evt)\n    dragStartPoint.set(target)\n    target.set(location)\n    scrollBody.useBaseMass().useSpeed(80)\n    addInteractionEvents()\n    startScroll = dragTracker.readPoint(evt)\n    startCross = dragTracker.readPoint(evt, crossAxis)\n    eventHandler.emit('pointerDown')\n\n    if (clearPreventClick) preventClick = false\n  }\n\n  function move(evt: PointerEventType): void {\n    if (!preventScroll && !isMouse) {\n      if (!evt.cancelable) return up(evt)\n      const lastScroll = dragTracker.readPoint(evt)\n      const lastCross = dragTracker.readPoint(evt, crossAxis)\n      const diffScroll = deltaAbs(lastScroll, startScroll)\n      const diffCross = deltaAbs(lastCross, startCross)\n      preventScroll = diffScroll > diffCross\n      if (!preventScroll && !preventClick) return up(evt)\n    }\n    const diff = dragTracker.pointerMove(evt)\n    if (!preventClick && diff) preventClick = true\n    animation.start()\n    target.add(direction.apply(diff))\n    evt.preventDefault()\n  }\n\n  function up(evt: PointerEventType): void {\n    const currentLocation = scrollTarget.byDistance(0, false)\n    const targetChanged = currentLocation.index !== index.get()\n    const rawForce = dragTracker.pointerUp(evt) * forceBoost()\n    const force = allowedForce(direction.apply(rawForce), targetChanged)\n    const forceFactor = factorAbs(rawForce, force)\n    const isMoving = deltaAbs(target.get(), dragStartPoint.get()) >= 0.5\n    const isVigorous = targetChanged && forceFactor > 0.75\n    const isBelowThreshold = mathAbs(rawForce) < dragThreshold\n    const speed = isVigorous ? 10 : baseSpeed\n    const mass = isVigorous ? baseMass + 2.5 * forceFactor : baseMass\n\n    if (isMoving && !isMouse) preventClick = true\n    preventScroll = false\n    pointerIsDown = false\n    interactionEvents.removeAll()\n    scrollBody.useSpeed(isBelowThreshold ? 9 : speed).useMass(mass)\n    scrollTo.distance(force, !dragFree)\n    isMouse = false\n    eventHandler.emit('pointerUp')\n  }\n\n  function click(evt: MouseEvent): void {\n    if (preventClick) {\n      evt.stopPropagation()\n      evt.preventDefault()\n    }\n  }\n\n  // DEPRECATED - Remove in v8 because handled automatically\n  function clickAllowed(): boolean {\n    return !preventClick\n  }\n\n  function pointerDown(): boolean {\n    return pointerIsDown\n  }\n\n  const self: DragHandlerType = {\n    addActivationEvents,\n    clickAllowed,\n    pointerDown,\n    removeAllEvents,\n  }\n  return self\n}\n","import { AxisOptionType, AxisType } from './Axis'\nimport { mathAbs } from './utils'\n\ntype PointerCoordType = keyof Touch | keyof MouseEvent\nexport type PointerEventType = TouchEvent | MouseEvent\n\nexport type DragTrackerType = {\n  isTouchEvent: (evt: PointerEventType) => evt is TouchEvent\n  pointerDown: (evt: PointerEventType) => number\n  pointerMove: (evt: PointerEventType) => number\n  pointerUp: (evt: PointerEventType) => number\n  readPoint: (evt: PointerEventType, evtAxis?: AxisOptionType) => number\n}\n\nexport function DragTracker(axis: AxisType): DragTrackerType {\n  const logInterval = 170\n\n  let startEvent: PointerEventType\n  let lastEvent: PointerEventType\n\n  function isTouchEvent(evt: PointerEventType): evt is TouchEvent {\n    return typeof TouchEvent !== 'undefined' && evt instanceof TouchEvent\n  }\n\n  function readTime(evt: PointerEventType): number {\n    return evt.timeStamp\n  }\n\n  function readPoint(evt: PointerEventType, evtAxis?: AxisOptionType): number {\n    const property = evtAxis || axis.scroll\n    const coord: PointerCoordType = `client${property === 'x' ? 'X' : 'Y'}`\n    return (isTouchEvent(evt) ? evt.touches[0] : evt)[coord]\n  }\n\n  function pointerDown(evt: PointerEventType): number {\n    startEvent = evt\n    lastEvent = evt\n    return readPoint(evt)\n  }\n\n  function pointerMove(evt: PointerEventType): number {\n    const diff = readPoint(evt) - readPoint(lastEvent)\n    const expired = readTime(evt) - readTime(startEvent) > logInterval\n\n    lastEvent = evt\n    if (expired) startEvent = evt\n    return diff\n  }\n\n  function pointerUp(evt: PointerEventType): number {\n    if (!startEvent || !lastEvent) return 0\n    const diffDrag = readPoint(lastEvent) - readPoint(startEvent)\n    const diffTime = readTime(evt) - readTime(startEvent)\n    const expired = readTime(evt) - readTime(lastEvent) > logInterval\n    const force = diffDrag / diffTime\n    const isFlick = diffTime && !expired && mathAbs(force) > 0.1\n\n    return isFlick ? force : 0\n  }\n\n  const self: DragTrackerType = {\n    isTouchEvent,\n    pointerDown,\n    pointerMove,\n    pointerUp,\n    readPoint,\n  }\n  return self\n}\n","export type PercentOfViewType = {\n  measure: (n: number) => number\n}\n\nexport function PercentOfView(viewSize: number): PercentOfViewType {\n  function measure(n: number): number {\n    return viewSize * (n / 100)\n  }\n\n  const self: PercentOfViewType = {\n    measure,\n  }\n  return self\n}\n","import { map, roundToDecimals, mathSign } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\n\nexport type ScrollBodyType = {\n  direction: () => number\n  seek: (target: Vector1DType) => ScrollBodyType\n  settle: (target: Vector1DType) => boolean\n  update: () => void\n  useBaseMass: () => ScrollBodyType\n  useBaseSpeed: () => ScrollBodyType\n  useMass: (n: number) => ScrollBodyType\n  useSpeed: (n: number) => ScrollBodyType\n}\n\nexport function ScrollBody(\n  location: Vector1DType,\n  baseSpeed: number,\n  baseMass: number,\n): ScrollBodyType {\n  const roundToTwoDecimals = roundToDecimals(2)\n  const velocity = Vector1D(0)\n  const acceleration = Vector1D(0)\n  const attraction = Vector1D(0)\n\n  let attractionDirection = 0\n  let speed = baseSpeed\n  let mass = baseMass\n\n  function update(): void {\n    velocity.add(acceleration)\n    location.add(velocity)\n    acceleration.multiply(0)\n  }\n\n  function applyForce(force: Vector1DType): void {\n    force.divide(mass)\n    acceleration.add(force)\n  }\n\n  function seek(target: Vector1DType): ScrollBodyType {\n    attraction.set(target).subtract(location)\n    const magnitude = map(attraction.get(), 0, 100, 0, speed)\n    attractionDirection = mathSign(attraction.get())\n    attraction.normalize().multiply(magnitude).subtract(velocity)\n    applyForce(attraction)\n    return self\n  }\n\n  function settle(target: Vector1DType): boolean {\n    const diff = target.get() - location.get()\n    const hasSettled = !roundToTwoDecimals(diff)\n    if (hasSettled) location.set(target)\n    return hasSettled\n  }\n\n  function direction(): number {\n    return attractionDirection\n  }\n\n  function useBaseSpeed(): ScrollBodyType {\n    return useSpeed(baseSpeed)\n  }\n\n  function useBaseMass(): ScrollBodyType {\n    return useMass(baseMass)\n  }\n\n  function useSpeed(n: number): ScrollBodyType {\n    speed = n\n    return self\n  }\n\n  function useMass(n: number): ScrollBodyType {\n    mass = n\n    return self\n  }\n\n  const self: ScrollBodyType = {\n    direction,\n    seek,\n    settle,\n    update,\n    useBaseMass,\n    useBaseSpeed,\n    useMass,\n    useSpeed,\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { ScrollBodyType } from './ScrollBody'\nimport { Vector1DType } from './Vector1d'\nimport { mathAbs } from './utils'\nimport { PercentOfViewType } from './PercentOfView'\n\nexport type ScrollBoundsType = {\n  constrain: (pointerDown: boolean) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function ScrollBounds(\n  limit: LimitType,\n  location: Vector1DType,\n  target: Vector1DType,\n  scrollBody: ScrollBodyType,\n  percentOfView: PercentOfViewType,\n): ScrollBoundsType {\n  const pullBackThreshold = percentOfView.measure(10)\n  const edgeOffsetTolerance = percentOfView.measure(50)\n  const maxFriction = 0.85\n  let disabled = false\n\n  function shouldConstrain(): boolean {\n    if (disabled) return false\n    if (!limit.reachedAny(target.get())) return false\n    if (!limit.reachedAny(location.get())) return false\n    return true\n  }\n\n  function constrain(pointerDown: boolean): void {\n    if (!shouldConstrain()) return\n    const edge = limit.reachedMin(location.get()) ? 'min' : 'max'\n    const diffToEdge = mathAbs(limit[edge] - location.get())\n    const diffToTarget = target.get() - location.get()\n    const friction = Math.min(diffToEdge / edgeOffsetTolerance, maxFriction)\n\n    target.subtract(diffToTarget * friction)\n\n    if (!pointerDown && mathAbs(diffToTarget) < pullBackThreshold) {\n      target.set(limit.constrain(target.get()))\n      scrollBody.useSpeed(10).useMass(3)\n    }\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  const self: ScrollBoundsType = {\n    constrain,\n    toggleActive,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayLast } from './utils'\n\nexport type ScrollContainOptionType = '' | 'trimSnaps' | 'keepSnaps'\n\nexport type ScrollContainType = {\n  snapsContained: number[]\n}\n\nexport function ScrollContain(\n  viewSize: number,\n  contentSize: number,\n  snapsAligned: number[],\n  containScroll: ScrollContainOptionType,\n): ScrollContainType {\n  const scrollBounds = Limit(-contentSize + viewSize, snapsAligned[0])\n  const snapsBounded = snapsAligned.map(scrollBounds.constrain)\n  const snapsContained = measureContained()\n\n  function findDuplicates(): LimitType {\n    const startSnap = snapsBounded[0]\n    const endSnap = arrayLast(snapsBounded)\n    const min = snapsBounded.lastIndexOf(startSnap)\n    const max = snapsBounded.indexOf(endSnap) + 1\n    return Limit(min, max)\n  }\n\n  function measureContained(): number[] {\n    if (contentSize <= viewSize) return [scrollBounds.max]\n    if (containScroll === 'keepSnaps') return snapsBounded\n    const { min, max } = findDuplicates()\n    return snapsBounded.slice(min, max)\n  }\n\n  const self: ScrollContainType = {\n    snapsContained,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayLast } from './utils'\n\nexport type ScrollLimitType = {\n  limit: LimitType\n}\n\nexport function ScrollLimit(\n  contentSize: number,\n  scrollSnaps: number[],\n  loop: boolean,\n): ScrollLimitType {\n  const limit = measureLimit()\n\n  function measureLimit(): LimitType {\n    const startSnap = scrollSnaps[0]\n    const endSnap = arrayLast(scrollSnaps)\n    const min = loop ? startSnap - contentSize : endSnap\n    const max = startSnap\n    return Limit(min, max)\n  }\n\n  const self: ScrollLimitType = {\n    limit,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollLooperType = {\n  loop: (direction: number) => void\n}\n\nexport function ScrollLooper(\n  contentSize: number,\n  limit: LimitType,\n  location: Vector1DType,\n  vectors: Vector1DType[],\n): ScrollLooperType {\n  const jointSafety = 0.1\n  const min = limit.min + jointSafety\n  const max = limit.max + jointSafety\n  const { reachedMin, reachedMax } = Limit(min, max)\n\n  function shouldLoop(direction: number): boolean {\n    if (direction === 1) return reachedMax(location.get())\n    if (direction === -1) return reachedMin(location.get())\n    return false\n  }\n\n  function loop(direction: number): void {\n    if (!shouldLoop(direction)) return\n\n    const loopDistance = contentSize * (direction * -1)\n    vectors.forEach((v) => v.add(loopDistance))\n  }\n\n  const self: ScrollLooperType = {\n    loop,\n  }\n  return self\n}\n","import { LimitType } from './Limit'\n\nexport type ScrollProgressType = {\n  get: (n: number) => number\n}\n\nexport function ScrollProgress(limit: LimitType): ScrollProgressType {\n  const { max, length: scrollLength } = limit\n\n  function get(n: number): number {\n    const currentLocation = n - max\n    return currentLocation / -scrollLength\n  }\n\n  const self: ScrollProgressType = {\n    get,\n  }\n  return self\n}\n","import { AlignmentType } from './Alignment'\nimport { AxisType } from './Axis'\nimport { SlidesToScrollType } from './SlidesToScroll'\nimport { arrayLast, arrayLastIndex, mathAbs } from './utils'\n\nexport type ScrollSnapsType = {\n  snaps: number[]\n  snapsAligned: number[]\n}\n\nexport function ScrollSnaps(\n  axis: AxisType,\n  alignment: AlignmentType,\n  containerRect: DOMRect,\n  slideRects: DOMRect[],\n  slideSizesWithGaps: number[],\n  slidesToScroll: SlidesToScrollType,\n  containScroll: boolean,\n): ScrollSnapsType {\n  const { startEdge, endEdge } = axis\n  const { groupSlides } = slidesToScroll\n  const alignments = measureSizes().map(alignment.measure)\n  const snaps = measureUnaligned()\n  const snapsAligned = measureAligned()\n\n  function measureSizes(): number[] {\n    return groupSlides(slideRects)\n      .map((rects) => arrayLast(rects)[endEdge] - rects[0][startEdge])\n      .map(mathAbs)\n  }\n\n  function measureUnaligned(): number[] {\n    return slideRects\n      .map((rect) => containerRect[startEdge] - rect[startEdge])\n      .map((snap) => -mathAbs(snap))\n  }\n\n  function measureAligned(): number[] {\n    const containedStartSnap = 0\n    const containedEndSnap = arrayLast(snaps) - arrayLast(slideSizesWithGaps)\n\n    return groupSlides(snaps)\n      .map((g) => g[0])\n      .map((snap, index, groupedSnaps) => {\n        const isFirst = !index\n        const isLast = index === arrayLastIndex(groupedSnaps)\n        if (containScroll && isFirst) return containedStartSnap\n        if (containScroll && isLast) return containedEndSnap\n        return snap + alignments[index]\n      })\n  }\n\n  const self: ScrollSnapsType = {\n    snaps,\n    snapsAligned,\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\nimport { mathAbs, mathSign } from './utils'\n\nexport type TargetType = {\n  distance: number\n  index: number\n}\n\nexport type ScrollTargetType = {\n  byIndex: (target: number, direction: number) => TargetType\n  byDistance: (force: number, snap: boolean) => TargetType\n  shortcut: (target: number, direction: number) => number\n}\n\nexport function ScrollTarget(\n  loop: boolean,\n  scrollSnaps: number[],\n  contentSize: number,\n  limit: LimitType,\n  targetVector: Vector1DType,\n): ScrollTargetType {\n  const { reachedAny, removeOffset, constrain } = limit\n\n  function minDistance(distances: number[]): number {\n    return distances.concat().sort((a, b) => mathAbs(a) - mathAbs(b))[0]\n  }\n\n  function findTargetSnap(target: number): TargetType {\n    const distance = loop ? removeOffset(target) : constrain(target)\n    const ascDiffsToSnaps = scrollSnaps\n      .map((scrollSnap) => scrollSnap - distance)\n      .map((diffToSnap) => shortcut(diffToSnap, 0))\n      .map((diff, i) => ({ diff, index: i }))\n      .sort((d1, d2) => mathAbs(d1.diff) - mathAbs(d2.diff))\n\n    const { index } = ascDiffsToSnaps[0]\n    return { index, distance }\n  }\n\n  function shortcut(target: number, direction: number): number {\n    const targets = [target, target + contentSize, target - contentSize]\n\n    if (!loop) return targets[0]\n    if (!direction) return minDistance(targets)\n\n    const matchingTargets = targets.filter((t) => mathSign(t) === direction)\n    return minDistance(matchingTargets)\n  }\n\n  function byIndex(index: number, direction: number): TargetType {\n    const diffToSnap = scrollSnaps[index] - targetVector.get()\n    const distance = shortcut(diffToSnap, direction)\n    return { index, distance }\n  }\n\n  function byDistance(distance: number, snap: boolean): TargetType {\n    const target = targetVector.get() + distance\n    const { index, distance: targetSnapDistance } = findTargetSnap(target)\n    const reachedBound = !loop && reachedAny(target)\n\n    if (!snap || reachedBound) return { index, distance }\n\n    const diffToSnap = scrollSnaps[index] - targetSnapDistance\n    const snapDistance = distance + shortcut(diffToSnap, 0)\n\n    return { index, distance: snapDistance }\n  }\n\n  const self: ScrollTargetType = {\n    byDistance,\n    byIndex,\n    shortcut,\n  }\n  return self\n}\n","import { AnimationType } from './Animation'\nimport { CounterType } from './Counter'\nimport { EventHandlerType } from './EventHandler'\nimport { ScrollTargetType, TargetType } from './ScrollTarget'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollToType = {\n  distance: (n: number, snap: boolean) => void\n  index: (n: number, direction: number) => void\n}\n\nexport function ScrollTo(\n  animation: AnimationType,\n  indexCurrent: CounterType,\n  indexPrevious: CounterType,\n  scrollTarget: ScrollTargetType,\n  targetVector: Vector1DType,\n  eventHandler: EventHandlerType,\n): ScrollToType {\n  function scrollTo(target: TargetType): void {\n    const distanceDiff = target.distance\n    const indexDiff = target.index !== indexCurrent.get()\n\n    if (distanceDiff) {\n      animation.start()\n      targetVector.add(distanceDiff)\n    }\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get())\n      indexCurrent.set(target.index)\n      eventHandler.emit('select')\n    }\n  }\n\n  function distance(n: number, snap: boolean): void {\n    const target = scrollTarget.byDistance(n, snap)\n    scrollTo(target)\n  }\n\n  function index(n: number, direction: number): void {\n    const targetIndex = indexCurrent.clone().set(n)\n    const target = scrollTarget.byIndex(targetIndex.get(), direction)\n    scrollTo(target)\n  }\n\n  const self: ScrollToType = {\n    distance,\n    index,\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { DirectionType } from './Direction'\nimport { Vector1DType } from './Vector1d'\n\nexport type TranslateType = {\n  clear: () => void\n  to: (vector: Vector1DType) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function Translate(\n  axis: AxisType,\n  direction: DirectionType,\n  container: HTMLElement,\n): TranslateType {\n  const translate = axis.scroll === 'x' ? x : y\n  const containerStyle = container.style\n  let disabled = false\n\n  function x(n: number): string {\n    return `translate3d(${n}px,0px,0px)`\n  }\n\n  function y(n: number): string {\n    return `translate3d(0px,${n}px,0px)`\n  }\n\n  function to(target: Vector1DType): void {\n    if (disabled) return\n    containerStyle.transform = translate(direction.apply(target.get()))\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  function clear(): void {\n    if (disabled) return\n    containerStyle.transform = ''\n    if (!container.getAttribute('style')) container.removeAttribute('style')\n  }\n\n  const self: TranslateType = {\n    clear,\n    to,\n    toggleActive,\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { arrayKeys } from './utils'\nimport { SlidesInViewType } from './SlidesInView'\nimport { Vector1D, Vector1DType } from './Vector1d'\nimport { Translate, TranslateType } from './Translate'\nimport { DirectionType } from './Direction'\n\ntype EdgeType = 'start' | 'end'\n\ntype LoopPointType = {\n  index: number\n  translate: TranslateType\n  location: Vector1DType\n  target: () => Vector1DType\n}\n\nexport type SlideLooperType = {\n  canLoop: () => boolean\n  clear: () => void\n  loop: () => void\n  loopPoints: LoopPointType[]\n}\n\nexport function SlideLooper(\n  axis: AxisType,\n  direction: DirectionType,\n  viewSize: number,\n  contentSize: number,\n  slideSizesWithGaps: number[],\n  scrollSnaps: number[],\n  slidesInView: SlidesInViewType,\n  scroll: Vector1DType,\n  slides: HTMLElement[],\n): SlideLooperType {\n  const ascItems = arrayKeys(slideSizesWithGaps)\n  const descItems = arrayKeys(slideSizesWithGaps).reverse()\n  const loopPoints = startPoints().concat(endPoints())\n\n  function removeSlideSizes(indexes: number[], from: number): number {\n    return indexes.reduce((a: number, i) => {\n      return a - slideSizesWithGaps[i]\n    }, from)\n  }\n\n  function slidesInGap(indexes: number[], gap: number): number[] {\n    return indexes.reduce((a: number[], i) => {\n      const remainingGap = removeSlideSizes(a, gap)\n      return remainingGap > 0 ? a.concat([i]) : a\n    }, [])\n  }\n\n  function findLoopPoints(indexes: number[], edge: EdgeType): LoopPointType[] {\n    const isStartEdge = edge === 'start'\n    const offset = isStartEdge ? -contentSize : contentSize\n    const slideBounds = slidesInView.findSlideBounds([offset])\n\n    return indexes.map((index) => {\n      const initial = isStartEdge ? 0 : -contentSize\n      const altered = isStartEdge ? contentSize : 0\n      const bounds = slideBounds.filter((b) => b.index === index)[0]\n      const point = bounds[isStartEdge ? 'end' : 'start']\n      const shift = Vector1D(-1)\n      const location = Vector1D(-1)\n      const translate = Translate(axis, direction, slides[index])\n      const target = () => shift.set(scroll.get() > point ? initial : altered)\n      return { index, location, translate, target }\n    })\n  }\n\n  function startPoints(): LoopPointType[] {\n    const gap = scrollSnaps[0] - 1\n    const indexes = slidesInGap(descItems, gap)\n    return findLoopPoints(indexes, 'end')\n  }\n\n  function endPoints(): LoopPointType[] {\n    const gap = viewSize - scrollSnaps[0] - 1\n    const indexes = slidesInGap(ascItems, gap)\n    return findLoopPoints(indexes, 'start')\n  }\n\n  function canLoop(): boolean {\n    return loopPoints.every(({ index }) => {\n      const otherIndexes = ascItems.filter((i) => i !== index)\n      return removeSlideSizes(otherIndexes, viewSize) <= 0.1\n    })\n  }\n\n  function loop(): void {\n    loopPoints.forEach((loopPoint) => {\n      const { target, translate, location } = loopPoint\n      const shift = target()\n      if (shift.get() === location.get()) return\n      if (shift.get() === 0) translate.clear()\n      else translate.to(shift)\n      location.set(shift)\n    })\n  }\n\n  function clear(): void {\n    loopPoints.forEach((loopPoint) => loopPoint.translate.clear())\n  }\n\n  const self: SlideLooperType = {\n    canLoop,\n    clear,\n    loop,\n    loopPoints,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\n\nexport type SlideBoundType = {\n  start: number\n  end: number\n  index: number\n}\n\nexport type SlidesInViewType = {\n  check: (location: number, bounds?: SlideBoundType[]) => number[]\n  findSlideBounds: (offsets?: number[], threshold?: number) => SlideBoundType[]\n}\n\nexport function SlidesInView(\n  viewSize: number,\n  contentSize: number,\n  slideSizes: number[],\n  snaps: number[],\n  limit: LimitType,\n  loop: boolean,\n  inViewThreshold: number,\n): SlidesInViewType {\n  const { removeOffset, constrain } = limit\n  const roundingSafety = 0.5\n  const cachedOffsets = loop ? [0, contentSize, -contentSize] : [0]\n  const cachedBounds = findSlideBounds(cachedOffsets, inViewThreshold)\n\n  function findSlideThresholds(threshold?: number): number[] {\n    const slideThreshold = threshold || 0\n\n    return slideSizes.map((slideSize) => {\n      const thresholdLimit = Limit(roundingSafety, slideSize - roundingSafety)\n      return thresholdLimit.constrain(slideSize * slideThreshold)\n    })\n  }\n\n  function findSlideBounds(\n    offsets?: number[],\n    threshold?: number,\n  ): SlideBoundType[] {\n    const slideOffsets = offsets || cachedOffsets\n    const slideThresholds = findSlideThresholds(threshold)\n\n    return slideOffsets.reduce((list: SlideBoundType[], offset) => {\n      const bounds = snaps.map((snap, index) => ({\n        start: snap - slideSizes[index] + slideThresholds[index] + offset,\n        end: snap + viewSize - slideThresholds[index] + offset,\n        index,\n      }))\n      return list.concat(bounds)\n    }, [])\n  }\n\n  function check(location: number, bounds?: SlideBoundType[]): number[] {\n    const limitedLocation = loop ? removeOffset(location) : constrain(location)\n    const slideBounds = bounds || cachedBounds\n\n    return slideBounds.reduce((list: number[], slideBound) => {\n      const { index, start, end } = slideBound\n      const inList = list.indexOf(index) !== -1\n      const inView = start < limitedLocation && end > limitedLocation\n      return !inList && inView ? list.concat([index]) : list\n    }, [])\n  }\n\n  const self: SlidesInViewType = {\n    check,\n    findSlideBounds,\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { arrayLast, arrayLastIndex, mathAbs } from './utils'\n\nexport type SlideSizesType = {\n  slideSizes: number[]\n  slideSizesWithGaps: number[]\n}\n\nexport function SlideSizes(\n  axis: AxisType,\n  containerRect: DOMRect,\n  slideRects: DOMRect[],\n  slides: HTMLElement[],\n  readEdgeGap: boolean,\n): SlideSizesType {\n  const { measureSize, startEdge, endEdge } = axis\n  const withEdgeGap = slideRects[0] && readEdgeGap\n  const startGap = measureStartGap()\n  const endGap = measureEndGap()\n  const slideSizes = slideRects.map(measureSize)\n  const slideSizesWithGaps = measureWithGaps()\n\n  function measureStartGap(): number {\n    if (!withEdgeGap) return 0\n    const slideRect = slideRects[0]\n    return mathAbs(containerRect[startEdge] - slideRect[startEdge])\n  }\n\n  function measureEndGap(): number {\n    if (!withEdgeGap) return 0\n    const style = window.getComputedStyle(arrayLast(slides))\n    return parseFloat(style.getPropertyValue(`margin-${endEdge}`))\n  }\n\n  function measureWithGaps(): number[] {\n    return slideRects\n      .map((rect, index, rects) => {\n        const isFirst = !index\n        const isLast = index === arrayLastIndex(rects)\n        if (isFirst) return slideSizes[index] + startGap\n        if (isLast) return slideSizes[index] + endGap\n        return rects[index + 1][startEdge] - rect[startEdge]\n      })\n      .map(mathAbs)\n  }\n\n  const self: SlideSizesType = {\n    slideSizes,\n    slideSizesWithGaps,\n  }\n  return self\n}\n","import { arrayKeys, arrayLast, isNumber } from './utils'\n\nexport type SlidesToScrollOptionType = 'auto' | number\n\nexport type SlidesToScrollType = {\n  groupSlides: <Type>(array: Type[]) => Type[][]\n}\n\nexport function SlidesToScroll(\n  viewSize: number,\n  slideSizesWithGaps: number[],\n  slidesToScroll: SlidesToScrollOptionType,\n): SlidesToScrollType {\n  const groupByNumber = isNumber(slidesToScroll)\n\n  function byNumber<Type>(array: Type[], groupSize: number): Type[][] {\n    return arrayKeys(array)\n      .filter((i) => i % groupSize === 0)\n      .map((i) => array.slice(i, i + groupSize))\n  }\n\n  function bySize<Type>(array: Type[]): Type[][] {\n    return arrayKeys(array)\n      .reduce((groupSizes: number[], i) => {\n        const chunk = slideSizesWithGaps.slice(arrayLast(groupSizes), i + 1)\n        const chunkSize = chunk.reduce((a, s) => a + s, 0)\n        return !i || chunkSize > viewSize ? groupSizes.concat(i) : groupSizes\n      }, [])\n      .map((start, i, groupSizes) => array.slice(start, groupSizes[i + 1]))\n  }\n\n  function groupSlides<Type>(array: Type[]): Type[][] {\n    return groupByNumber ? byNumber(array, slidesToScroll) : bySize(array)\n  }\n\n  const self: SlidesToScrollType = {\n    groupSlides,\n  }\n  return self\n}\n","import { Alignment } from './Alignment'\nimport { Animation, AnimationType } from './Animation'\nimport { Axis, AxisType } from './Axis'\nimport { Counter, CounterType } from './Counter'\nimport { Direction, DirectionType } from './Direction'\nimport { DragHandler, DragHandlerType } from './DragHandler'\nimport { DragTracker } from './DragTracker'\nimport { EventHandlerType } from './EventHandler'\nimport { EventStore, EventStoreType } from './EventStore'\nimport { LimitType } from './Limit'\nimport { OptionsType } from './Options'\nimport { PercentOfView, PercentOfViewType } from './PercentOfView'\nimport { ScrollBody, ScrollBodyType } from './ScrollBody'\nimport { ScrollBounds, ScrollBoundsType } from './ScrollBounds'\nimport { ScrollContain } from './ScrollContain'\nimport { ScrollLimit } from './ScrollLimit'\nimport { ScrollLooper, ScrollLooperType } from './ScrollLooper'\nimport { ScrollProgress, ScrollProgressType } from './ScrollProgress'\nimport { ScrollSnaps } from './ScrollSnaps'\nimport { ScrollTarget, ScrollTargetType } from './ScrollTarget'\nimport { ScrollTo, ScrollToType } from './ScrollTo'\nimport { SlideLooper, SlideLooperType } from './SlideLooper'\nimport { SlidesInView, SlidesInViewType } from './SlidesInView'\nimport { SlideSizes } from './SlideSizes'\nimport { SlidesToScroll, SlidesToScrollType } from './SlidesToScroll'\nimport { Translate, TranslateType } from './Translate'\nimport { arrayKeys, arrayLast, arrayLastIndex } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\n\nexport type EngineType = {\n  axis: AxisType\n  direction: DirectionType\n  animation: AnimationType\n  scrollBounds: ScrollBoundsType\n  scrollLooper: ScrollLooperType\n  scrollProgress: ScrollProgressType\n  index: CounterType\n  indexPrevious: CounterType\n  limit: LimitType\n  location: Vector1DType\n  options: OptionsType\n  percentOfView: PercentOfViewType\n  scrollBody: ScrollBodyType\n  dragHandler: DragHandlerType\n  eventStore: EventStoreType\n  slideLooper: SlideLooperType\n  slidesInView: SlidesInViewType\n  slidesToScroll: SlidesToScrollType\n  target: Vector1DType\n  translate: TranslateType\n  scrollTo: ScrollToType\n  scrollTarget: ScrollTargetType\n  scrollSnaps: number[]\n  slideIndexes: number[]\n  containerRect: DOMRect\n  slideRects: DOMRect[]\n}\n\nexport function Engine(\n  root: HTMLElement,\n  container: HTMLElement,\n  slides: HTMLElement[],\n  options: OptionsType,\n  eventHandler: EventHandlerType,\n): EngineType {\n  // Options\n  const {\n    align,\n    axis: scrollAxis,\n    direction: contentDirection,\n    startIndex,\n    inViewThreshold,\n    loop,\n    speed,\n    dragFree,\n    slidesToScroll: groupSlides,\n    skipSnaps,\n    containScroll,\n  } = options\n\n  // Measurements\n  const containerRect = container.getBoundingClientRect()\n  const slideRects = slides.map((slide) => slide.getBoundingClientRect())\n  const direction = Direction(contentDirection)\n  const axis = Axis(scrollAxis, contentDirection)\n  const viewSize = axis.measureSize(containerRect)\n  const percentOfView = PercentOfView(viewSize)\n  const alignment = Alignment(align, viewSize)\n  const containSnaps = !loop && containScroll !== ''\n  const readEdgeGap = loop || containScroll !== ''\n  const { slideSizes, slideSizesWithGaps } = SlideSizes(\n    axis,\n    containerRect,\n    slideRects,\n    slides,\n    readEdgeGap,\n  )\n  const slidesToScroll = SlidesToScroll(\n    viewSize,\n    slideSizesWithGaps,\n    groupSlides,\n  )\n  const { snaps, snapsAligned } = ScrollSnaps(\n    axis,\n    alignment,\n    containerRect,\n    slideRects,\n    slideSizesWithGaps,\n    slidesToScroll,\n    containSnaps,\n  )\n  const contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps)\n  const { snapsContained } = ScrollContain(\n    viewSize,\n    contentSize,\n    snapsAligned,\n    containScroll,\n  )\n  const scrollSnaps = containSnaps ? snapsContained : snapsAligned\n  const { limit } = ScrollLimit(contentSize, scrollSnaps, loop)\n\n  // Indexes\n  const index = Counter(arrayLastIndex(scrollSnaps), startIndex, loop)\n  const indexPrevious = index.clone()\n  const slideIndexes = arrayKeys(slides)\n\n  // Draw\n  const update = (): void => {\n    if (!loop) engine.scrollBounds.constrain(engine.dragHandler.pointerDown())\n    engine.scrollBody.seek(target).update()\n    const settled = engine.scrollBody.settle(target)\n\n    if (settled && !engine.dragHandler.pointerDown()) {\n      engine.animation.stop()\n      eventHandler.emit('settle')\n    }\n    if (!settled) {\n      eventHandler.emit('scroll')\n    }\n    if (loop) {\n      engine.scrollLooper.loop(engine.scrollBody.direction())\n      engine.slideLooper.loop()\n    }\n\n    engine.translate.to(location)\n    engine.animation.proceed()\n  }\n\n  // Shared\n  const animation = Animation(update)\n  const startLocation = scrollSnaps[index.get()]\n  const location = Vector1D(startLocation)\n  const target = Vector1D(startLocation)\n  const scrollBody = ScrollBody(location, speed, 1)\n  const scrollTarget = ScrollTarget(\n    loop,\n    scrollSnaps,\n    contentSize,\n    limit,\n    target,\n  )\n  const scrollTo = ScrollTo(\n    animation,\n    index,\n    indexPrevious,\n    scrollTarget,\n    target,\n    eventHandler,\n  )\n  const slidesInView = SlidesInView(\n    viewSize,\n    contentSize,\n    slideSizes,\n    snaps,\n    limit,\n    loop,\n    inViewThreshold,\n  )\n\n  // DragHandler\n  const dragHandler = DragHandler(\n    axis,\n    direction,\n    root,\n    target,\n    DragTracker(axis),\n    location,\n    animation,\n    scrollTo,\n    scrollBody,\n    scrollTarget,\n    index,\n    eventHandler,\n    percentOfView,\n    loop,\n    dragFree,\n    skipSnaps,\n  )\n\n  // Engine\n  const engine: EngineType = {\n    containerRect,\n    slideRects,\n    animation,\n    axis,\n    direction,\n    dragHandler,\n    eventStore: EventStore(),\n    percentOfView,\n    index,\n    indexPrevious,\n    limit,\n    location,\n    options,\n    scrollBody,\n    scrollBounds: ScrollBounds(\n      limit,\n      location,\n      target,\n      scrollBody,\n      percentOfView,\n    ),\n    scrollLooper: ScrollLooper(contentSize, limit, location, [\n      location,\n      target,\n    ]),\n    scrollProgress: ScrollProgress(limit),\n    scrollSnaps,\n    scrollTarget,\n    scrollTo,\n    slideLooper: SlideLooper(\n      axis,\n      direction,\n      viewSize,\n      contentSize,\n      slideSizesWithGaps,\n      scrollSnaps,\n      slidesInView,\n      location,\n      slides,\n    ),\n    slidesToScroll,\n    slidesInView,\n    slideIndexes,\n    target,\n    translate: Translate(axis, direction, container),\n  }\n  return engine\n}\n","type CallbackType = (evt: EmblaEventType) => void\ntype ListenersType = Partial<{ [key in EmblaEventType]: CallbackType[] }>\n\nexport type EmblaEventType =\n  | 'init'\n  | 'pointerDown'\n  | 'pointerUp'\n  | 'scroll'\n  | 'select'\n  | 'settle'\n  | 'destroy'\n  | 'reInit'\n  | 'resize'\n\nexport type EventHandlerType = {\n  emit: (evt: EmblaEventType) => EventHandlerType\n  on: (evt: EmblaEventType, cb: CallbackType) => EventHandlerType\n  off: (evt: EmblaEventType, cb: CallbackType) => EventHandlerType\n}\n\nexport function EventHandler(): EventHandlerType {\n  const listeners: ListenersType = {}\n\n  function getListeners(evt: EmblaEventType): CallbackType[] {\n    return listeners[evt] || []\n  }\n\n  function emit(evt: EmblaEventType): EventHandlerType {\n    getListeners(evt).forEach((e) => e(evt))\n    return self\n  }\n\n  function on(evt: EmblaEventType, cb: CallbackType): EventHandlerType {\n    listeners[evt] = getListeners(evt).concat([cb])\n    return self\n  }\n\n  function off(evt: EmblaEventType, cb: CallbackType): EventHandlerType {\n    listeners[evt] = getListeners(evt).filter((e) => e !== cb)\n    return self\n  }\n\n  const self: EventHandlerType = {\n    emit,\n    off,\n    on,\n  }\n  return self\n}\n","import { AlignmentOptionType } from './Alignment'\nimport { AxisOptionType } from './Axis'\nimport { SlidesToScrollOptionType } from './SlidesToScroll'\nimport { DirectionOptionType } from './Direction'\nimport { ScrollContainOptionType } from './ScrollContain'\n\nexport type LooseOptionsType = {\n  [key: string]: unknown\n}\n\nexport type CreateOptionsType<Type extends LooseOptionsType> = Type & {\n  active: boolean\n  breakpoints: {\n    [key: string]: Omit<Partial<CreateOptionsType<Type>>, 'breakpoints'>\n  }\n}\n\nexport type OptionsType = CreateOptionsType<{\n  align: AlignmentOptionType\n  axis: AxisOptionType\n  container: string | HTMLElement | null\n  slides: string | HTMLElement[] | NodeListOf<HTMLElement> | null\n  containScroll: ScrollContainOptionType\n  direction: DirectionOptionType\n  slidesToScroll: SlidesToScrollOptionType\n  dragFree: boolean\n  draggable: boolean\n  inViewThreshold: number\n  loop: boolean\n  skipSnaps: boolean\n  speed: number\n  startIndex: number\n}>\n\nexport const defaultOptions: OptionsType = {\n  align: 'center',\n  axis: 'x',\n  container: null,\n  slides: null,\n  containScroll: '',\n  direction: 'ltr',\n  slidesToScroll: 1,\n  breakpoints: {},\n  dragFree: false,\n  draggable: true,\n  inViewThreshold: 0,\n  loop: false,\n  skipSnaps: false,\n  speed: 10,\n  startIndex: 0,\n  active: true,\n}\n\nexport type EmblaOptionsType = Partial<OptionsType>\n","import { LooseOptionsType, CreateOptionsType } from './Options'\nimport { objectKeys, objectsAreEqual, objectsMergeDeep } from './utils'\n\ntype OptionsType = Partial<CreateOptionsType<LooseOptionsType>>\n\nexport type OptionsHandlerType = {\n  merge: <TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB?: TypeB,\n  ) => TypeA\n  areEqual: <TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB: TypeB,\n  ) => boolean\n  atMedia: <Type extends OptionsType>(options: Type) => Type\n}\n\nexport function OptionsHandler(): OptionsHandlerType {\n  function merge<TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB?: TypeB,\n  ): TypeA {\n    return <TypeA>objectsMergeDeep(optionsA, optionsB || {})\n  }\n\n  function areEqual<TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB: TypeB,\n  ): boolean {\n    const breakpointsA = JSON.stringify(objectKeys(optionsA.breakpoints || {}))\n    const breakpointsB = JSON.stringify(objectKeys(optionsB.breakpoints || {}))\n    if (breakpointsA !== breakpointsB) return false\n    return objectsAreEqual(optionsA, optionsB)\n  }\n\n  function atMedia<Type extends OptionsType>(options: Type): Type {\n    const optionsAtMedia = options.breakpoints || {}\n    const matchedMediaOptions = objectKeys(optionsAtMedia)\n      .filter((media) => window.matchMedia(media).matches)\n      .map((media) => optionsAtMedia[media])\n      .reduce((a, mediaOption) => merge(a, mediaOption), {})\n\n    return merge(options, matchedMediaOptions)\n  }\n\n  const self: OptionsHandlerType = {\n    merge,\n    areEqual,\n    atMedia,\n  }\n  return self\n}\n","import { EmblaCarouselType } from '.'\nimport { OptionsHandler } from './OptionsHandler'\nimport { EmblaPluginsType, EmblaPluginType } from './Plugins'\n\ntype PluginChangedHandlerType = () => boolean\n\nexport type PluginsHandlerType = {\n  init: (\n    plugins: EmblaPluginType[],\n    embla: EmblaCarouselType,\n  ) => EmblaPluginsType\n  destroy: () => void\n  haveChanged: PluginChangedHandlerType\n}\n\nexport function PluginsHandler(): PluginsHandlerType {\n  const { atMedia, areEqual } = OptionsHandler()\n  let activePlugins: EmblaPluginType[] = []\n  let pluginsChanged: PluginChangedHandlerType[] = []\n\n  function haveChanged(): boolean {\n    return pluginsChanged.some((hasChanged) => hasChanged())\n  }\n\n  function hasChanged(plugin: EmblaPluginType): PluginChangedHandlerType {\n    const options = atMedia(plugin.options)\n    return (): boolean => !areEqual(options, atMedia(plugin.options))\n  }\n\n  function init(\n    plugins: EmblaPluginType[],\n    embla: EmblaCarouselType,\n  ): EmblaPluginsType {\n    pluginsChanged = plugins.map(hasChanged)\n    activePlugins = plugins.filter((plugin) => atMedia(plugin.options).active)\n    activePlugins.forEach((plugin) => plugin.init(embla))\n\n    return plugins.reduce((map, plugin) => {\n      return Object.assign(map, { [plugin.name]: plugin })\n    }, {})\n  }\n\n  function destroy(): void {\n    activePlugins = activePlugins.filter((plugin) => plugin.destroy())\n  }\n\n  const self: PluginsHandlerType = {\n    init,\n    destroy,\n    haveChanged,\n  }\n  return self\n}\n","import { Engine, EngineType } from './Engine'\nimport { EventStore } from './EventStore'\nimport { EventHandler, EventHandlerType } from './EventHandler'\nimport { defaultOptions, EmblaOptionsType } from './Options'\nimport { OptionsHandler } from './OptionsHandler'\nimport { PluginsHandler } from './PluginsHandler'\nimport { EmblaPluginsType, EmblaPluginType } from './Plugins'\nimport { isString } from './utils'\n\nexport type EmblaCarouselType = {\n  canScrollNext: () => boolean\n  canScrollPrev: () => boolean\n  clickAllowed: () => boolean\n  containerNode: () => HTMLElement\n  internalEngine: () => EngineType\n  destroy: () => void\n  off: EventHandlerType['off']\n  on: EventHandlerType['on']\n  plugins: () => EmblaPluginsType\n  previousScrollSnap: () => number\n  reInit: (options?: EmblaOptionsType, plugins?: EmblaPluginType[]) => void\n  rootNode: () => HTMLElement\n  scrollNext: (jump?: boolean) => void\n  scrollPrev: (jump?: boolean) => void\n  scrollProgress: () => number\n  scrollSnapList: () => number[]\n  scrollTo: (index: number, jump?: boolean) => void\n  selectedScrollSnap: () => number\n  slideNodes: () => HTMLElement[]\n  slidesInView: (target?: boolean) => number[]\n  slidesNotInView: (target?: boolean) => number[]\n}\n\nfunction EmblaCarousel(\n  root: HTMLElement,\n  userOptions?: EmblaOptionsType,\n  userPlugins?: EmblaPluginType[],\n): EmblaCarouselType {\n  const resizeHandlers = EventStore()\n  const optionsHandler = OptionsHandler()\n  const pluginsHandler = PluginsHandler()\n  const eventHandler = EventHandler()\n  const { on, off } = eventHandler\n  const reInit = reActivate\n\n  let destroyed = false\n  let engine: EngineType\n  let optionsBase = optionsHandler.merge(\n    defaultOptions,\n    EmblaCarousel.globalOptions,\n  )\n  let options = optionsHandler.merge(optionsBase)\n  let pluginList: EmblaPluginType[] = []\n  let pluginApis: EmblaPluginsType\n  let rootSize = 0\n  let container: HTMLElement\n  let slides: HTMLElement[]\n\n  function storeElements(): void {\n    const { container: userContainer, slides: userSlides } = options\n\n    const customContainer = isString(userContainer)\n      ? root.querySelector(userContainer)\n      : userContainer\n    container = <HTMLElement>(customContainer || root.children[0])\n\n    const customSlides = isString(userSlides)\n      ? container.querySelectorAll(userSlides)\n      : userSlides\n    slides = <HTMLElement[]>[].slice.call(customSlides || container.children)\n  }\n\n  function activate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[],\n  ): void {\n    if (destroyed) return\n\n    optionsBase = optionsHandler.merge(optionsBase, withOptions)\n    options = optionsHandler.atMedia(optionsBase)\n\n    storeElements()\n\n    engine = Engine(root, container, slides, options, eventHandler)\n    rootSize = engine.axis.measureSize(root.getBoundingClientRect())\n\n    if (!options.active) return deActivate()\n\n    engine.translate.to(engine.location)\n    pluginList = withPlugins || pluginList\n    pluginApis = pluginsHandler.init(pluginList, self)\n\n    if (options.loop) {\n      if (!engine.slideLooper.canLoop()) {\n        deActivate()\n        activate({ loop: false }, withPlugins)\n        optionsBase = optionsHandler.merge(optionsBase, { loop: true })\n        return\n      }\n      engine.slideLooper.loop()\n    }\n    if (options.draggable && container.offsetParent && slides.length) {\n      engine.dragHandler.addActivationEvents()\n    }\n  }\n\n  function reActivate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[],\n  ): void {\n    const startIndex = selectedScrollSnap()\n    deActivate()\n    activate(optionsHandler.merge({ startIndex }, withOptions), withPlugins)\n    eventHandler.emit('reInit')\n  }\n\n  function deActivate(): void {\n    engine.dragHandler.removeAllEvents()\n    engine.animation.stop()\n    engine.eventStore.removeAll()\n    engine.translate.clear()\n    engine.slideLooper.clear()\n    pluginsHandler.destroy()\n  }\n\n  function destroy(): void {\n    if (destroyed) return\n    destroyed = true\n    resizeHandlers.removeAll()\n    deActivate()\n    eventHandler.emit('destroy')\n  }\n\n  function resize(): void {\n    const newOptions = optionsHandler.atMedia(optionsBase)\n    const optionsChanged = !optionsHandler.areEqual(newOptions, options)\n    const newRootSize = engine.axis.measureSize(root.getBoundingClientRect())\n    const rootSizeChanged = rootSize !== newRootSize\n    const pluginsChanged = pluginsHandler.haveChanged()\n\n    if (rootSizeChanged || optionsChanged || pluginsChanged) reActivate()\n    eventHandler.emit('resize')\n  }\n\n  function slidesInView(target?: boolean): number[] {\n    const location = engine[target ? 'target' : 'location'].get()\n    const type = options.loop ? 'removeOffset' : 'constrain'\n    return engine.slidesInView.check(engine.limit[type](location))\n  }\n\n  function slidesNotInView(target?: boolean): number[] {\n    const inView = slidesInView(target)\n    return engine.slideIndexes.filter((index) => inView.indexOf(index) === -1)\n  }\n\n  function scrollTo(index: number, jump?: boolean, direction?: number): void {\n    if (!options.active || destroyed) return\n    engine.scrollBody.useBaseMass().useSpeed(jump ? 100 : options.speed)\n    engine.scrollTo.index(index, direction || 0)\n  }\n\n  function scrollNext(jump?: boolean): void {\n    const next = engine.index.clone().add(1)\n    scrollTo(next.get(), jump === true, -1)\n  }\n\n  function scrollPrev(jump?: boolean): void {\n    const prev = engine.index.clone().add(-1)\n    scrollTo(prev.get(), jump === true, 1)\n  }\n\n  function canScrollNext(): boolean {\n    const next = engine.index.clone().add(1)\n    return next.get() !== selectedScrollSnap()\n  }\n\n  function canScrollPrev(): boolean {\n    const prev = engine.index.clone().add(-1)\n    return prev.get() !== selectedScrollSnap()\n  }\n\n  function scrollSnapList(): number[] {\n    return engine.scrollSnaps.map(engine.scrollProgress.get)\n  }\n\n  function scrollProgress(): number {\n    return engine.scrollProgress.get(engine.location.get())\n  }\n\n  function selectedScrollSnap(): number {\n    return engine.index.get()\n  }\n\n  function previousScrollSnap(): number {\n    return engine.indexPrevious.get()\n  }\n\n  function clickAllowed(): boolean {\n    return engine.dragHandler.clickAllowed()\n  }\n\n  function plugins(): EmblaPluginsType {\n    return pluginApis\n  }\n\n  function internalEngine(): EngineType {\n    return engine\n  }\n\n  function rootNode(): HTMLElement {\n    return root\n  }\n\n  function containerNode(): HTMLElement {\n    return container\n  }\n\n  function slideNodes(): HTMLElement[] {\n    return slides\n  }\n\n  const self: EmblaCarouselType = {\n    canScrollNext,\n    canScrollPrev,\n    clickAllowed,\n    containerNode,\n    internalEngine,\n    destroy,\n    off,\n    on,\n    plugins,\n    previousScrollSnap,\n    reInit,\n    rootNode,\n    scrollNext,\n    scrollPrev,\n    scrollProgress,\n    scrollSnapList,\n    scrollTo,\n    selectedScrollSnap,\n    slideNodes,\n    slidesInView,\n    slidesNotInView,\n  }\n\n  activate(userOptions, userPlugins)\n  resizeHandlers.add(window, 'resize', resize)\n  setTimeout(() => eventHandler.emit('init'), 0)\n  return self\n}\n\nEmblaCarousel.globalOptions = <EmblaOptionsType | undefined>undefined\nEmblaCarousel.optionsHandler = OptionsHandler\n\nexport default EmblaCarousel\n"],"names":["map","value","iStart","iStop","oStart","oStop","isNumber","subject","isString","isObject","Object","prototype","toString","call","isArray","Array","isRecord","mathAbs","n","Math","abs","mathSign","deltaAbs","valueB","valueA","factorAbs","diff","roundToDecimals","decimalPoints","pow","round","arrayKeys","array","objectKeys","Number","arrayLast","arrayLastIndex","max","length","object","keys","objectsMergeDeep","objectA","objectB","reduce","mergedObjects","currentObject","forEach","key","areObjects","objectsAreEqual","objectAKeys","objectBKeys","every","concat","Alignment","align","viewSize","predefined","start","center","end","percent","measure","self","Animation","callback","animationFrame","ifAnimating","active","cb","window","requestAnimationFrame","stop","cancelAnimationFrame","proceed","Axis","axis","direction","scroll","cross","startEdge","getStartEdge","endEdge","getEndEdge","measureSize","rect","width","height","Limit","min","reachedMin","reachedMax","reachedAny","constrain","removeOffset","ceil","Counter","loop","_a","loopEnd","counter","withinLimit","get","set","add","clone","Direction","sign","apply","EventStore","listeners","node","type","handler","options","passive","addEventListener","push","removeEventListener","removeAll","filter","remove","Vector1D","vector","readNumber","subtract","multiply","divide","normalize","DragHandler","rootNode","target","dragTracker","location","animation","scrollTo","scrollBody","scrollTarget","index","eventHandler","percentOfView","dragFree","skipSnaps","crossAxis","focusNodes","nonPassiveEvent","dragStartPoint","activationEvents","interactionEvents","dragThreshold","snapForceBoost","mouse","touch","freeForceBoost","baseSpeed","baseMass","startScroll","startCross","pointerIsDown","preventScroll","preventClick","isMouse","addActivationEvents","evt","preventDefault","undefined","down","up","click","addInteractionEvents","document","move","removeAllEvents","isFocusNode","name","nodeName","indexOf","forceBoost","boost","allowedForce","force","targetChanged","next","isEdge","baseForce","byDistance","distance","byIndex","isTouchEvent","button","isMoving","clearPreventClick","pointerDown","useBaseMass","useSpeed","readPoint","emit","cancelable","lastScroll","lastCross","diffScroll","diffCross","pointerMove","currentLocation","rawForce","pointerUp","forceFactor","isVigorous","isBelowThreshold","speed","mass","useMass","stopPropagation","clickAllowed","DragTracker","logInterval","startEvent","lastEvent","TouchEvent","readTime","timeStamp","evtAxis","property","coord","touches","expired","diffDrag","diffTime","isFlick","PercentOfView","ScrollBody","roundToTwoDecimals","velocity","acceleration","attraction","attractionDirection","update","applyForce","seek","magnitude","settle","hasSettled","useBaseSpeed","ScrollBounds","limit","pullBackThreshold","edgeOffsetTolerance","maxFriction","disabled","shouldConstrain","edge","diffToEdge","diffToTarget","friction","toggleActive","ScrollContain","contentSize","snapsAligned","containScroll","scrollBounds","snapsBounded","snapsContained","measureContained","findDuplicates","startSnap","endSnap","lastIndexOf","slice","ScrollLimit","scrollSnaps","measureLimit","ScrollLooper","vectors","jointSafety","shouldLoop","loopDistance","v","ScrollProgress","scrollLength","ScrollSnaps","alignment","containerRect","slideRects","slideSizesWithGaps","slidesToScroll","groupSlides","alignments","measureSizes","snaps","measureUnaligned","measureAligned","rects","snap","containedStartSnap","containedEndSnap","g","groupedSnaps","isFirst","isLast","ScrollTarget","targetVector","minDistance","distances","sort","a","b","findTargetSnap","ascDiffsToSnaps","scrollSnap","diffToSnap","shortcut","i","d1","d2","targets","matchingTargets","t","targetSnapDistance","reachedBound","snapDistance","ScrollTo","indexCurrent","indexPrevious","distanceDiff","indexDiff","targetIndex","Translate","container","translate","x","y","containerStyle","style","to","transform","clear","getAttribute","removeAttribute","SlideLooper","slidesInView","slides","ascItems","descItems","reverse","loopPoints","startPoints","endPoints","removeSlideSizes","indexes","from","slidesInGap","gap","remainingGap","findLoopPoints","isStartEdge","offset","slideBounds","findSlideBounds","initial","altered","bounds","point","shift","canLoop","otherIndexes","loopPoint","SlidesInView","slideSizes","inViewThreshold","roundingSafety","cachedOffsets","cachedBounds","findSlideThresholds","threshold","slideThreshold","slideSize","thresholdLimit","offsets","slideOffsets","slideThresholds","list","check","limitedLocation","slideBound","inList","inView","SlideSizes","readEdgeGap","withEdgeGap","startGap","measureStartGap","endGap","measureEndGap","measureWithGaps","slideRect","getComputedStyle","parseFloat","getPropertyValue","SlidesToScroll","groupByNumber","byNumber","groupSize","bySize","groupSizes","chunk","chunkSize","s","Engine","root","scrollAxis","contentDirection","startIndex","getBoundingClientRect","slide","containSnaps","_b","slideIndexes","engine","dragHandler","settled","scrollLooper","slideLooper","startLocation","eventStore","scrollProgress","EventHandler","getListeners","e","on","off","defaultOptions","breakpoints","draggable","OptionsHandler","merge","optionsA","optionsB","areEqual","breakpointsA","JSON","stringify","breakpointsB","atMedia","optionsAtMedia","matchedMediaOptions","media","matchMedia","matches","mediaOption","PluginsHandler","activePlugins","pluginsChanged","haveChanged","some","hasChanged","plugin","init","plugins","embla","assign","destroy","EmblaCarousel","userOptions","userPlugins","resizeHandlers","optionsHandler","pluginsHandler","reInit","reActivate","destroyed","optionsBase","globalOptions","pluginList","pluginApis","rootSize","storeElements","userContainer","userSlides","customContainer","querySelector","children","customSlides","querySelectorAll","activate","withOptions","withPlugins","deActivate","offsetParent","selectedScrollSnap","resize","newOptions","optionsChanged","newRootSize","rootSizeChanged","slidesNotInView","jump","scrollNext","scrollPrev","prev","canScrollNext","canScrollPrev","scrollSnapList","previousScrollSnap","internalEngine","containerNode","slideNodes","setTimeout"],"mappings":"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"}