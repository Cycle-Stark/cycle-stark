{"version":3,"file":"embla-carousel-react.esm.js","sources":["src/components/utils.ts","src/components/index.ts"],"sourcesContent":["import EmblaCarousel, { EmblaPluginType } from 'embla-carousel'\n\nexport function canUseDOM(): boolean {\n  return !!(\n    typeof window !== 'undefined' &&\n    window.document &&\n    window.document.createElement\n  )\n}\n\nexport function sortAndMapPluginToOptions(\n  plugins: EmblaPluginType[],\n): EmblaPluginType['options'][] {\n  return plugins\n    .concat()\n    .sort((a, b) => (a.name > b.name ? 1 : -1))\n    .map((plugin) => plugin.options)\n}\n\nexport function arePluginsEqual(\n  pluginsA: EmblaPluginType[],\n  pluginsB: EmblaPluginType[],\n): boolean {\n  if (pluginsA.length !== pluginsB.length) return false\n\n  const { areEqual } = EmblaCarousel.optionsHandler()\n  const optionsA = sortAndMapPluginToOptions(pluginsA)\n  const optionsB = sortAndMapPluginToOptions(pluginsB)\n\n  return optionsA.every((optionA, index) => {\n    const optionB = optionsB[index]\n    return areEqual(optionA, optionB)\n  })\n}\n","import { useRef, useEffect, useState, useCallback } from 'react'\nimport { arePluginsEqual, canUseDOM } from './utils'\nimport EmblaCarousel, {\n  EmblaCarouselType,\n  EmblaOptionsType,\n  EmblaPluginType,\n} from 'embla-carousel'\n\ntype EmblaViewportRefType = <ViewportElement extends HTMLElement>(\n  instance: ViewportElement | null,\n) => void\n\nexport type UseEmblaCarouselType = [\n  EmblaViewportRefType,\n  EmblaCarouselType | undefined,\n]\n\nfunction useEmblaCarousel(\n  options: EmblaOptionsType = {},\n  plugins: EmblaPluginType[] = [],\n): UseEmblaCarouselType {\n  const optionsHandler = useRef(EmblaCarousel.optionsHandler())\n  const storedOptions = useRef(options)\n  const storedPlugins = useRef(plugins)\n  const [embla, setEmbla] = useState<EmblaCarouselType>()\n  const [viewport, setViewport] = useState<HTMLElement>()\n\n  const reInit = useCallback(() => {\n    if (embla) embla.reInit(storedOptions.current, storedPlugins.current)\n  }, [embla])\n\n  useEffect(() => {\n    if (canUseDOM() && viewport) {\n      EmblaCarousel.globalOptions = useEmblaCarousel.globalOptions\n      const newEmbla = EmblaCarousel(\n        viewport,\n        storedOptions.current,\n        storedPlugins.current,\n      )\n      setEmbla(newEmbla)\n      return () => newEmbla.destroy()\n    } else {\n      setEmbla(undefined)\n    }\n  }, [viewport, setEmbla])\n\n  useEffect(() => {\n    if (optionsHandler.current.areEqual(storedOptions.current, options)) return\n\n    storedOptions.current = options\n    reInit()\n  }, [options, reInit])\n\n  useEffect(() => {\n    if (arePluginsEqual(storedPlugins.current, plugins)) return\n\n    storedPlugins.current = plugins\n    reInit()\n  }, [plugins, reInit])\n\n  return [<EmblaViewportRefType>setViewport, embla]\n}\n\nuseEmblaCarousel.globalOptions = <EmblaOptionsType | undefined>undefined\n\nexport default useEmblaCarousel\n"],"names":["canUseDOM","window","document","createElement","sortAndMapPluginToOptions","plugins","concat","sort","a","b","name","map","plugin","options","arePluginsEqual","pluginsA","pluginsB","length","areEqual","EmblaCarousel","optionsHandler","optionsA","optionsB","every","optionA","index","optionB","useEmblaCarousel","useRef","storedOptions","storedPlugins","_a","useState","embla","setEmbla","_b","viewport","setViewport","reInit","useCallback","current","useEffect","globalOptions","newEmbla_1","destroy","undefined"],"mappings":"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"}