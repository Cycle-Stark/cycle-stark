'use client';
import dayjs from 'dayjs';
import React from 'react';
import { factory, useProps, useStyles, Box } from '@mantine/core';
import '../DatesProvider/DatesProvider.mjs';
import { useDatesContext } from '../DatesProvider/use-dates-context.mjs';
import { PickerControl } from '../PickerControl/PickerControl.mjs';
import { getYearInTabOrder } from './get-year-in-tab-order/get-year-in-tab-order.mjs';
import { getYearsData } from './get-years-data/get-years-data.mjs';
import { isYearDisabled } from './is-year-disabled/is-year-disabled.mjs';
import classes from './YearsList.module.css.mjs';

const defaultProps = {
  yearsListFormat: "YYYY",
  withCellSpacing: true
};
const YearsList = factory((_props, ref) => {
  const props = useProps("YearsList", defaultProps, _props);
  const {
    classNames,
    className,
    style,
    styles,
    unstyled,
    vars,
    decade,
    yearsListFormat,
    locale,
    minDate,
    maxDate,
    getYearControlProps,
    __staticSelector,
    __getControlRef,
    __onControlKeyDown,
    __onControlClick,
    __onControlMouseEnter,
    __preventFocus,
    __stopPropagation,
    withCellSpacing,
    size,
    ...others
  } = props;
  const getStyles = useStyles({
    name: __staticSelector || "YearsList",
    classes,
    props,
    className,
    style,
    classNames,
    styles,
    unstyled,
    vars,
    rootSelector: "yearsList"
  });
  const ctx = useDatesContext();
  const years = getYearsData(decade);
  const yearInTabOrder = getYearInTabOrder(years, minDate, maxDate, getYearControlProps);
  const rows = years.map((yearsRow, rowIndex) => {
    const cells = yearsRow.map((year, cellIndex) => {
      const controlProps = getYearControlProps?.(year);
      const isYearInTabOrder = dayjs(year).isSame(yearInTabOrder, "year");
      return /* @__PURE__ */ React.createElement(
        "td",
        {
          key: cellIndex,
          ...getStyles("yearsListCell"),
          "data-with-spacing": withCellSpacing || void 0
        },
        /* @__PURE__ */ React.createElement(
          PickerControl,
          {
            ...getStyles("yearsListControl"),
            size,
            unstyled,
            "data-mantine-stop-propagation": __stopPropagation || void 0,
            disabled: isYearDisabled(year, minDate, maxDate),
            ref: (node) => __getControlRef?.(rowIndex, cellIndex, node),
            ...controlProps,
            onKeyDown: (event) => {
              controlProps?.onKeyDown?.(event);
              __onControlKeyDown?.(event, { rowIndex, cellIndex, date: year });
            },
            onClick: (event) => {
              controlProps?.onClick?.(event);
              __onControlClick?.(event, year);
            },
            onMouseEnter: (event) => {
              controlProps?.onMouseEnter?.(event);
              __onControlMouseEnter?.(event, year);
            },
            onMouseDown: (event) => {
              controlProps?.onMouseDown?.(event);
              __preventFocus && event.preventDefault();
            },
            tabIndex: __preventFocus || !isYearInTabOrder ? -1 : 0
          },
          dayjs(year).locale(ctx.getLocale(locale)).format(yearsListFormat)
        )
      );
    });
    return /* @__PURE__ */ React.createElement("tr", { key: rowIndex, ...getStyles("yearsListRow") }, cells);
  });
  return /* @__PURE__ */ React.createElement(Box, { component: "table", ref, size, ...getStyles("yearsList"), ...others }, /* @__PURE__ */ React.createElement("tbody", null, rows));
});
YearsList.classes = classes;
YearsList.displayName = "@mantine/dates/YearsList";

export { YearsList };
//# sourceMappingURL=YearsList.mjs.map
