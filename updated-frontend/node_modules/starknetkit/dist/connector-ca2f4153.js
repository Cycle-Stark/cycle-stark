var C = Object.defineProperty;
var O = (s, u, o) => u in s ? C(s, u, { enumerable: !0, configurable: !0, writable: !0, value: o }) : s[u] = o;
var d = (s, u, o) => (O(s, typeof u != "symbol" ? u + "" : u, o), o);
class U extends Error {
  constructor() {
    super(...arguments);
    d(this, "name", "ConnectorNotConnectedError");
    d(this, "message", "Connector not connected");
  }
}
class A extends Error {
  constructor() {
    super(...arguments);
    d(this, "name", "ConnectorNotFoundError");
    d(this, "message", "Connector not found");
  }
}
class F extends Error {
  constructor() {
    super(...arguments);
    d(this, "name", "UserRejectedRequestError");
    d(this, "message", "User rejected request");
  }
}
class R extends Error {
  constructor() {
    super(...arguments);
    d(this, "name", "UserNotConnectedError");
    d(this, "message", "User not connected");
  }
}
var T = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function j(s) {
  return s && s.__esModule && Object.prototype.hasOwnProperty.call(s, "default") ? s.default : s;
}
function k(s) {
  if (s.__esModule)
    return s;
  var u = s.default;
  if (typeof u == "function") {
    var o = function v() {
      if (this instanceof v) {
        var y = [null];
        y.push.apply(y, arguments);
        var E = Function.bind.apply(u, y);
        return new E();
      }
      return u.apply(this, arguments);
    };
    o.prototype = u.prototype;
  } else
    o = {};
  return Object.defineProperty(o, "__esModule", { value: !0 }), Object.keys(s).forEach(function(v) {
    var y = Object.getOwnPropertyDescriptor(s, v);
    Object.defineProperty(o, v, y.get ? y : {
      enumerable: !0,
      get: function() {
        return s[v];
      }
    });
  }), o;
}
var w = { exports: {} };
(function(s) {
  var u = Object.prototype.hasOwnProperty, o = "~";
  function v() {
  }
  Object.create && (v.prototype = /* @__PURE__ */ Object.create(null), new v().__proto__ || (o = !1));
  function y(i, t, n) {
    this.fn = i, this.context = t, this.once = n || !1;
  }
  function E(i, t, n, r, p) {
    if (typeof n != "function")
      throw new TypeError("The listener must be a function");
    var a = new y(n, r || i, p), c = o ? o + t : t;
    return i._events[c] ? i._events[c].fn ? i._events[c] = [i._events[c], a] : i._events[c].push(a) : (i._events[c] = a, i._eventsCount++), i;
  }
  function b(i, t) {
    --i._eventsCount === 0 ? i._events = new v() : delete i._events[t];
  }
  function l() {
    this._events = new v(), this._eventsCount = 0;
  }
  l.prototype.eventNames = function() {
    var t = [], n, r;
    if (this._eventsCount === 0)
      return t;
    for (r in n = this._events)
      u.call(n, r) && t.push(o ? r.slice(1) : r);
    return Object.getOwnPropertySymbols ? t.concat(Object.getOwnPropertySymbols(n)) : t;
  }, l.prototype.listeners = function(t) {
    var n = o ? o + t : t, r = this._events[n];
    if (!r)
      return [];
    if (r.fn)
      return [r.fn];
    for (var p = 0, a = r.length, c = new Array(a); p < a; p++)
      c[p] = r[p].fn;
    return c;
  }, l.prototype.listenerCount = function(t) {
    var n = o ? o + t : t, r = this._events[n];
    return r ? r.fn ? 1 : r.length : 0;
  }, l.prototype.emit = function(t, n, r, p, a, c) {
    var h = o ? o + t : t;
    if (!this._events[h])
      return !1;
    var e = this._events[h], _ = arguments.length, m, f;
    if (e.fn) {
      switch (e.once && this.removeListener(t, e.fn, void 0, !0), _) {
        case 1:
          return e.fn.call(e.context), !0;
        case 2:
          return e.fn.call(e.context, n), !0;
        case 3:
          return e.fn.call(e.context, n, r), !0;
        case 4:
          return e.fn.call(e.context, n, r, p), !0;
        case 5:
          return e.fn.call(e.context, n, r, p, a), !0;
        case 6:
          return e.fn.call(e.context, n, r, p, a, c), !0;
      }
      for (f = 1, m = new Array(_ - 1); f < _; f++)
        m[f - 1] = arguments[f];
      e.fn.apply(e.context, m);
    } else {
      var x = e.length, g;
      for (f = 0; f < x; f++)
        switch (e[f].once && this.removeListener(t, e[f].fn, void 0, !0), _) {
          case 1:
            e[f].fn.call(e[f].context);
            break;
          case 2:
            e[f].fn.call(e[f].context, n);
            break;
          case 3:
            e[f].fn.call(e[f].context, n, r);
            break;
          case 4:
            e[f].fn.call(e[f].context, n, r, p);
            break;
          default:
            if (!m)
              for (g = 1, m = new Array(_ - 1); g < _; g++)
                m[g - 1] = arguments[g];
            e[f].fn.apply(e[f].context, m);
        }
    }
    return !0;
  }, l.prototype.on = function(t, n, r) {
    return E(this, t, n, r, !1);
  }, l.prototype.once = function(t, n, r) {
    return E(this, t, n, r, !0);
  }, l.prototype.removeListener = function(t, n, r, p) {
    var a = o ? o + t : t;
    if (!this._events[a])
      return this;
    if (!n)
      return b(this, a), this;
    var c = this._events[a];
    if (c.fn)
      c.fn === n && (!p || c.once) && (!r || c.context === r) && b(this, a);
    else {
      for (var h = 0, e = [], _ = c.length; h < _; h++)
        (c[h].fn !== n || p && !c[h].once || r && c[h].context !== r) && e.push(c[h]);
      e.length ? this._events[a] = e.length === 1 ? e[0] : e : b(this, a);
    }
    return this;
  }, l.prototype.removeAllListeners = function(t) {
    var n;
    return t ? (n = o ? o + t : t, this._events[n] && b(this, n)) : (this._events = new v(), this._eventsCount = 0), this;
  }, l.prototype.off = l.prototype.removeListener, l.prototype.addListener = l.prototype.on, l.prefixed = o, l.EventEmitter = l, s.exports = l;
})(w);
var L = w.exports;
const N = /* @__PURE__ */ j(L);
class q extends N {
}
export {
  q as C,
  F as U,
  U as a,
  A as b,
  T as c,
  R as d,
  j as e,
  k as g
};
